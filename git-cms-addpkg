#!/bin/sh -e
# Mimics addpkg behavior in git.
usage () {
  echo "git cms-addpkg [options] SubSystem/Package"
  echo
  echo "Options:"
  echo -e "-h, --help         \tthis help message"
  echo -e "-d, --debug        \tenable debug output"
  exit $1
}

PKG_NAME=
while [ "$#" != 0 ]; do
  case "$1" in
    -h | --help )
      usage 0;;
    -d | --debug )
      shift; set -x ;;
    -*)
      echo Unknown option $1 ; usage 1 ;;
    *)
      if [ "X$PKG_NAME" = X ]; then
        PKG_NAME=$1
      else
        echo "You can specify only one package at the time." ; exit 1
      fi
      shift 1
    ;;
  esac
done

if [ "X$PKG_NAME" = X ]; then
  echo "You need to specify at least one package." ; exit 1 
fi

CMSSW_TAG=$CMSSW_VERSION
PKG_NAME="$1"

if [ "X$CMSSW_BASE" = X ]; then
  echo CMSSW environment not setup. Do cmsenv in some workarea.
  exit 1
fi

IN_RELEASE=`echo $PWD | grep -e "^$CMSSW_BASE" 2> /dev/null && echo 1 || echo 0`
if [ "X$IN_RELEASE" = X0 ]; then
  echo git cms-addpkg must be run from inside a CMSSW area.
  exit 1
fi

if [ "X$CMSSW_GIT_REFERENCE" = X ]; then
  if [ -e /afs/cern.ch/cms/git-cmssw-mirror/cmssw.git ]; then
    CMSSW_GIT_REFERENCE=/afs/cern.ch/cms/git-cmssw-mirror/cmssw.git
  fi
fi
mkdir -p $CMSSW_BASE/src
cd $CMSSW_BASE/src
if [ ! -d "$CMSSW_BASE/src/.git" ]; then
  # If we have a reference repository, use it by copying locally all the files.
  if [ ! "X$CMSSW_GIT_REFERENCE" = X ]; then
    mkdir -p $CMSSW_BASE/src/.git
    rsync -a $CMSSW_GIT_REFERENCE/ $CMSSW_BASE/src/.git/
    touch $CMSSW_BASE/src/.git/info/sparse-checkout
    git config --local --bool core.sparsecheckout true
    git config --local --bool core.bare false
    FIRSTTIME=true
  else
    git init
    FIRSTTIME=true
  fi
fi
git config remote.cmssw-main.url git@github.com:cms-sw/cmssw.git
git config remote.cmssw-main-ro.url https://github.com/cms-sw/cmssw.git
git config --get-all remote.cmssw-main-ro.fetch | grep "refs/remotes/cmssw-main-ro/pr/*" >/dev/null || git config --add remote.cmssw-main-ro.fetch "+refs/pull/*/head:refs/remotes/cmssw-main-ro/pr/*"
git config core.sparsecheckout true
touch $CMSSW_BASE/src/.git/info/sparse-checkout
cp -f $CMSSW_BASE/src/.git/info/sparse-checkout $CMSSW_BASE/src/.git/info/sparse-checkout-new
echo "$PKG_NAME" | sed -e 's|[/]*$|/|' >> $CMSSW_BASE/src/.git/info/sparse-checkout-new
cat .git/info/sparse-checkout-new | sort -u > $CMSSW_BASE/src/.git/info/sparse-checkout
if [ ! "X$CMSSW_MIRROR" = X ]; then
  git remote set-url cmssw-main-ro $CMSSW_MIRROR
  git fetch --tags $CMSSW_MIRROR
  git remote set-url cmssw-main-ro https://github.com/cms-sw/cmssw.git
fi
git fetch --tags cmssw-main-ro
if [ "X$FIRSTTIME" = Xtrue ]; then
  git reset --hard $CMSSW_TAG
fi
git read-tree -mu HEAD
